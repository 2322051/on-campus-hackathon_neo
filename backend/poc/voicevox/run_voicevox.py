from VoicevoxEngine import VoicevoxClient


OUTPUTID = "004"
# データベースから取得する．db sqlを叩く．データベースからデータを取得するpyを作る．
# app/db...
text = """
この論文は、「変分オートエンコーダ（Variational Autoencoder; VAE）」という生成モデルを提案しています。VAEは、データの中から隠れた特徴（潜在変数）を学習し、その特徴を使って新しいデータを生成できるモデルなんです。
例えば、たくさんの顔写真を与えると、VAEはその写真の「目の形」「鼻の高さ」「髪の色」といった特徴を自動的に学びます。そして、これらの特徴を組み合わせることで、訓練データにはなかった新しい顔写真を生成できるようになる、というイメージです。
この論文の核となるのは、**「連続的な潜在変数を持つ確率モデルにおける推論と学習を、大規模データセットに対しても効率的に行うための手法」**を提供した点です。特に、事後分布（データが与えられたときの潜在変数の確率分布）が計算しにくい場合に、どうやって効率的に学習するかという問題に答えています。
"""
speaker = 2

# pyファイルにて取得後，別ファイルにてpydanticでバリデーション．型変換してmodelに突っ込む．
# 作成した音声ファイルをmp3に変換後，sqlを叩いてデータベースに突っ込む．

model = VoicevoxClient()
model.synthesize_voice(
    text=text,
    speaker=speaker,
    output_path=f"../../data/voices/{OUTPUTID}_{speaker}.wav"
)
